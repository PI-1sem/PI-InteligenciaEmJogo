/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pi_1sem.screens;

import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

import pi_1sem.modelo.participantes.Administrador;
import pi_1sem.persistencia.usuarios.AdministradorDAO;

/**
 *
 * @author charl
 */
public class TelaEdicaoProfessor extends javax.swing.JFrame {

    /**
     * Creates new form Administrador
     */
    public TelaEdicaoProfessor() {
        initComponents();
        listarAdministradores();
        capturarAltercoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nomeTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        senhaTextField = new javax.swing.JTextField();
        adicionarProfessorButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        professoresTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        voltarButton = new javax.swing.JButton();
        excluirButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("POLIEDRO");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Arial", 2, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Professores");

        jLabel3.setFont(new java.awt.Font("Arial", 2, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Turmas");

        jLabel4.setIcon(new javax.swing.ImageIcon("src/main/java/pi_1sem/images/usuarioAdm2.png"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 629, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)))
                .addGap(10, 10, 10))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Professores");

        jLabel6.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel6.setText("Nome:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel8.setText("E-mail :");


        jLabel9.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel9.setText("Senha");


        adicionarProfessorButton.setBackground(new java.awt.Color(0, 102, 255));
        adicionarProfessorButton.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        adicionarProfessorButton.setForeground(new java.awt.Color(255, 255, 255));
        adicionarProfessorButton.setText("+ adcionar professor");
        adicionarProfessorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarProfessorButtonActionPerformed(evt);
            }
        });
        professoresTable.setShowGrid(true);
        professoresTable.setGridColor(java.awt.Color.GRAY);
        professoresTable.setRowHeight(30);
        professoresTable.setBackground(new java.awt.Color(204, 204, 204));
        professoresTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        professoresTable.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        professoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                
            },
            new String [] {
                "ID matr√≠cula ", "Nome ", "E-mail ", "Senha"
            }
        ){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column != 0;
            }
        });
        for (int i = 1; i < professoresTable.getColumnCount(); i++) {
            javax.swing.table.TableColumn column = professoresTable.getColumnModel().getColumn(i);
            if (column.getCellEditor() instanceof javax.swing.DefaultCellEditor) {
                ((javax.swing.DefaultCellEditor) column.getCellEditor()).setClickCountToStart(2);
            }
        }
        professoresTable.setToolTipText("");
        jScrollPane1.setViewportView(professoresTable);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1229, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );

        voltarButton.setBackground(new java.awt.Color(146, 198, 243));
        voltarButton.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 18)); // NOI18N
        voltarButton.setText("Voltar");
        voltarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarButtonActionPerformed(evt);
            }
        });

        excluirButton.setBackground(new java.awt.Color(255, 51, 51));
        excluirButton.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 18)); // NOI18N
        excluirButton.setForeground(new java.awt.Color(255, 255, 255));
        excluirButton.setText("Excluir");
        excluirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(voltarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(adicionarProfessorButton)
                        .addGap(107, 107, 107)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(senhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(excluirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(165, 165, 165))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(senhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(adicionarProfessorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(excluirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(voltarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adicionarProfessorButtonActionPerformed(java.awt.event.ActionEvent evt) {//
        var resposta= JOptionPane.showConfirmDialog(null, "Deseja adicionar o Professor?", "Tem certeza disso?", JOptionPane.OK_CANCEL_OPTION);

        if(resposta==JOptionPane.OK_OPTION){
            String [] campos={
                nomeTextField.getText(),
                emailTextField.getText(),
                senhaTextField.getText()
            };
            for (int i= 0; i < campos.length; i++) {
                if(campos[i].isEmpty()){
                    JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
                    return;
                }
                if(i == 1 && !campos[i].contains("@")){
                    JOptionPane.showMessageDialog(null, "Email inv√°lido!");
                    return;
                }
                if(i == 2 && campos[i].length()<8){
                    JOptionPane.showMessageDialog(null, "A senha deve ter no m√≠nimo 8 caracteres!");
                    return;
                }
            }
            try{
                var adm= new Administrador(campos[0], campos[1], campos[2]);
                var admDAO= new AdministradorDAO();
                admDAO.cadastrar(adm);
    
                JOptionPane.showMessageDialog(null, "Professor cadastrado com sucesso!");
                listarAdministradores();
    
                nomeTextField.setText("");
                emailTextField.setText("");
                senhaTextField.setText("");
    
            }
            catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar o professor");
            }
        }
    }

    private void excluirButtonActionPerformed(java.awt.event.ActionEvent evt) {
        var resposta= JOptionPane.showConfirmDialog(null, "Deseja excluir o Professor?", "Tem certeza disso?", JOptionPane.OK_CANCEL_OPTION);

        if(resposta == JOptionPane.OK_OPTION){
            try {
                int idExcluir= pegarCampoId();
                var admDAO = new AdministradorDAO();
                admDAO.remover(idExcluir);
                listarAdministradores();
    
                JOptionPane.showMessageDialog(this, "Professor excluido!");
            } 
            catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao excluir o professor!");
            }
        }
    }

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//
        new OpcoesEditar().setVisible(true);

        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEdicaoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEdicaoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEdicaoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEdicaoProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaEdicaoProfessor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarProfessorButton;
    private javax.swing.JTable professoresTable;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JButton excluirButton;
    private javax.swing.JButton voltarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JTextField senhaTextField;
    // End of variables declaration//GEN-END:variables
    private void listarAdministradores() {
        try {
            var admDAO= new AdministradorDAO();
            DefaultTableModel model = (DefaultTableModel) professoresTable.getModel();
            model.setNumRows(0);


            ArrayList<Administrador> administradores = admDAO.listar();

            for (Administrador i: administradores) {
                model.addRow(new Object[]{
                    i.getId(),
                    i.getNome(),
                    i.getEmail(),
                    i.getSenha()
                });
            }   
        } 
        
        catch (Exception e) {
           e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao listar administradores: ");
        }
    }
    private Integer pegarCampoId(){
        int linhaSelecionada = professoresTable.getSelectedRow();   
        int idSelecionado= Integer.parseInt(professoresTable.getModel().getValueAt(linhaSelecionada, 0).toString());

        return idSelecionado;
    }

    private void capturarAltercoes(){
        var model = (DefaultTableModel) professoresTable.getModel();
    
    // Adiciona um listener √∫nico (evita m√∫ltiplas inst√¢ncias)
    model.removeTableModelListener(this::handleTableUpdate);
    model.addTableModelListener(this::handleTableUpdate);
    }

    private void handleTableUpdate(TableModelEvent e) {
        if (e.getType() != TableModelEvent.UPDATE || e.getColumn() < 1) return;
        
        int row = e.getFirstRow();
        int col = e.getColumn();
        
        if (row < 0 || row >= professoresTable.getRowCount()) return;
    
        var valorAlterado = professoresTable.getModel().getValueAt(row, col).toString();
        var id = Integer.parseInt(professoresTable.getModel().getValueAt(row, 0).toString());

        if(valorAlterado.isEmpty()){
            JOptionPane.showMessageDialog(null, "N√£o √© poss√≠vel alterar para um campo vazio");
            return;
        }

        if (col == 1) {
            try{
                AdministradorDAO admDAO = new AdministradorDAO();
                admDAO.atualizarNome(valorAlterado, id);

                JOptionPane.showMessageDialog(null, "O nome foi alterado com sucesso");
            }
            catch(Exception ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro ao alterar o nome");
            }
        }
        if (col == 2) {
            if(!valorAlterado.contains("@")){
                JOptionPane.showMessageDialog(null, "ERRO! O email deve conter @");
                return;
            }
            try{
                AdministradorDAO admDAO = new AdministradorDAO();
                admDAO.atualizarEmail(valorAlterado, id);

                JOptionPane.showMessageDialog(null, "O email foi alterado com sucesso");
            }
            catch(Exception ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro ao alterar o email");
            }
        }
        if (col == 3) {
            if(valorAlterado.length() < 8){
                JOptionPane.showMessageDialog(null, "ERRO! A senha deve conter no m√≠nimo 8 caracteres");
                return;
            }
            try{
                AdministradorDAO admDAO = new AdministradorDAO();
                admDAO.atualizarSenha(valorAlterado, id);
                JOptionPane.showMessageDialog(null, "A senha foi alterada com sucesso");
            }
            catch(Exception ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro ao alterar a senha");
            }
        }
    }
}
